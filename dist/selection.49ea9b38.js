(()=>{"use strict";const e=!1,t=function(){const e=window.navigator.userAgent,t=window.navigator.platform;return t.toLowerCase().startsWith("mac")?"macOS":t.toLowerCase().startsWith("ip")?"iOS":t.toLowerCase().startsWith("win")?"Windows":/Android/.test(e)?"Android":/Linux/.test(t)?"Linux":null}(),i=["Control","Shift","Alt","Meta"],M=browser.i18n.getMessage("notifySearchEngineNotFound"),l="https://mycroftproject.com/installos.php/",n="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",o="",g="38px",I=/[\s\S]*/i;let c="";c="macOS"===t?"cmd+":"Windows"===t?"win+":"Linux"===t?"super+":"meta+";let a={},N="",s="",j="",r=null,D=null,u=!1,d="",z={},y="";async function A(){if("mycroftproject.com"!=s)return;const t=document.querySelectorAll('a[href^="/install.html"]'),i=Array.from(t);e&&console.log(i),i.forEach((e=>{let t=new Image;t.src=browser.runtime.getURL("/icons/context-search.svg"),t.className="icon",t.height="16px",t.style.marginRight="5px",t.style.cursor="pointer",t.title=browser.i18n.getMessage("AddSearchEngine"),t.onclick=async function(){const t=e.getAttribute("href"),i=m(t).pid,M=m(t).name,n=l+i+"/"+M+".xml",o=await p(n);null!==o&&C("addNewSearchEngine",o)},e.parentNode.insertBefore(t,e)}))}function m(t){const i=t.substring(t.indexOf("?"));e&&console.log(`query string: ${i}`);const M=new URLSearchParams(i);return{pid:M.get("id"),name:M.get("name")}}function L(){if(window.getSelection&&(r=window.getSelection(),r.rangeCount>0&&(D=r.getRangeAt(0),y=D.toString().trim())),null!=document.activeElement&&("TEXTAREA"===document.activeElement.tagName||"INPUT"===document.activeElement.tagName)){let e=document.activeElement.value.substring(document.activeElement.selectionStart,document.activeElement.selectionEnd);""!==e&&(y=e)}e&&console.log(`Selected text: ${y}`)}function w(e){var t,i;C("setTargetUrl",d.siteSearchUrl+((t=(t=i=`site:https://${s} ${e}`)||"")!==decodeURIComponent(t)?i:encodeURIComponent(i))),C("setSelection",e)}function x(t){t.preventDefault(),t.stopPropagation(),e&&console.log("Grid icon got clicked:"+t.type);let i=t.target.parentNode.id;if(e&&console.log("Search engine clicked:"+i),u){let e=document.getElementById("cs-grid");e.style.display="none",e.removeEventListener("click",x),e.removeEventListener("mouseleave",S),e=null}window.getSelection().addRange(D),C("doSearch",{id:i})}function S(e){let t=e.target;t.style.display="none",t.removeEventListener("click",x),t.removeEventListener("mouseleave",S),t=null}function Q(t){e&&console.log(t),e&&console.log(t.target.tagName),"IMG"===t.target.tagName&&(t.target.style.border="3px solid #999")}function T(t){e&&console.log(t),e&&console.log(t.target.tagName),"IMG"===t.target.tagName&&(t.target.style.border="3px solid #fff")}function C(e,t){browser.runtime.sendMessage({action:e,data:t})}async function p(t){const i=await function(t){return new Promise(((i,M)=>{let l=new Headers;l.append("Content-Type","text/xml");let n=new Request(t,{method:"GET",headers:l});fetch(n).then((e=>e.text())).then((e=>(new window.DOMParser).parseFromString(e,"text/xml"))).then((t=>{e&&console.log(t),i(t)})).catch((t=>{e&&console.log("Something went wrong!",t),M(t)}))}))}(t),M=h(i).shortName,l=h(i).queryString;for(let e in a)if(l===a[e].url)return null;let n=M.replace(/\s/g,"-").toLowerCase();for(;!E(n);)n=O(M);n=n.trim(),e&&(console.log(n),console.log(M),console.log(l));let o=Object.keys(a).length;return a[n]={index:o,name:M,keyword:"",keyboardShortcut:"",multitab:!1,url:l,show:!0,base64:""},a[n].regex={},a[n].regex.body=I.source,a[n].regex.flags=I.flags,e&&console.log(a[n]),{id:n,searchEngine:a[n]}}function h(t){let i,M,l,n;n="",i=t.documentElement.childNodes,e&&console.log(i);for(let e of i){let t=e.nodeName;if(n+=t+"\n","ShortName"===t&&(M=e.textContent),"Url"===t){"text/html"===e.getAttribute("type")&&(l=e.getAttribute("template"))}}return e&&console.log(n),{shortName:M,queryString:l}}function O(t){let i=t.replace(/\s/g,"-").toLowerCase();return i=i+"-"+Math.floor(1e6*Math.random()).toString(),e&&console.log(i),i}function E(e){for(let t in a)if(t===e)return!1;return!0}function b(e){return"number"!=typeof e&&("string"==typeof e?0===e.trim().length:Array.isArray(e)?0===e.length:"object"==typeof e?null===e||0===Object.keys(e).length:"boolean"!=typeof e&&!e)}e&&console.log(document.readyState),"complete"===document.readyState&&A(),document.addEventListener("selectionchange",(function(){L(),null!=y&&""!==y&&w(y)})),document.addEventListener("contextmenu",(function(t){e&&console.log(t);const i=t.target;if("IMG"===i.tagName){window.getSelection&&window.getSelection().removeAllRanges();let i=function(e){if(/^(https?|file|ftps?|mailto|javascript|data:image\/[^;]{2,9};):/i.test(e))return e;var t=location.href.match(/^(.+)\/?(?:#.+)?$/)[0]+"/";if("//"==e.substring(0,2))return location.protocol+e;if("/"==e.charAt(0))return location.protocol+"//"+location.host+e;if("./"==e.substring(0,2))e="."+e;else{if(/^\s*$/.test(e))return"";e="../"+e}e=t+e;for(;/\/\.\.\//.test(e=e.replace(/[^/]+\/+\.\.\//g,"")););return e=e.replace(/\.$/,"").replace(/\/\./g,"").replace(/"/g,"%22").replace(/'/g,"%27").replace(/</g,"%3C").replace(/>/g,"%3E")}(t.target.getAttribute("src"));C("setTargetUrl",i),e&&console.log(`Image url: ${i}`)}})),document.addEventListener("mouseup",(function(t){e&&console.log("Click event triggered:\n"+t.type,t.button,t.altKey);if(d.disableAltClick)return;if(t.button>0)return;if(!t.altKey)return;let i=document.getElementById("cs-grid");if(null!==i&&"none"!==i.style.display)return;let M=t.clientX,l=t.clientY;!function(t,i){e&&console.log(a);let M=Object.keys(a),l=M.length;l+=1;let I=Math.ceil(Math.sqrt(l)),c=I-Math.floor(Math.abs(I*I-l)/I),N=document.getElementById("cs-grid");null!=N&&N.parentElement.removeChild(N);let s=document.createElement("nav");s.setAttribute("id","cs-grid"),s.style.display="block",s.style.backgroundColor="white",s.style.border="3px solid #999",s.style.padding="5px",s.style.borderRadius="20px",s.style.zIndex=999,s.style.position="fixed",s.style.setProperty("top",i.toString()+"px"),s.style.setProperty("left",t.toString()+"px");let j=document.createElement("ul");j.style.margin="0px",j.style.padding="0px";for(let e=0;e<c;e++){let t=document.createElement("li");t.style.listStyleType="none",t.style.margin="0px",t.style.padding="0px",t.style.height=g;let i=document.createElement("ul");i.style.margin="0px",i.style.padding="0px",i.style.height=g;for(let t=0;t<I&&!(e*I+t+1>l);t++){let c="",N="",s="",j=document.createElement("li");j.style.display="inline-block",j.style.listStyleType="none",j.style.width=g,j.style.height=g;let r=document.createElement("img");if(r.style.display="inline-block",0===e&&0===t?(c="multisearch",N="data:image/svg+xml;base64,"+o,s="multi-search"):(c=M[e*I+t-1],N="data:image/png;base64,",b(a[c])||b(a[c].base64)?N+=n:N+=a[c].base64,s=a[c].name),j.setAttribute("id",c),j.style.margin="0px",j.style.padding="0px",r.setAttribute("src",N),r.setAttribute("title",s),r.style.margin="0px",r.style.padding="0px",r.style.border="3px solid #fff",r.style.borderRadius="10px",r.style.width="32px",r.style.height="32px",r.addEventListener("mouseover",Q),r.addEventListener("mouseleave",T),j.appendChild(r),i.appendChild(j),e*I+t===l)break}t.appendChild(i),j.appendChild(t)}s.appendChild(j),s.addEventListener("click",x),s.addEventListener("mouseleave",S),document.getElementsByTagName("body")[0].appendChild(s),s.style.left=0,s.style.top=0;let r=document.body.clientWidth,D=window.innerHeight,u=s.offsetWidth+16,d=s.offsetHeight;s.style.left=t>r-u?r-u+"px":t+"px";s.style.top=i>D-d?D-d+"px":i+"px"}(M,l)})),document.addEventListener("keydown",(t=>{"INPUT"!==t.target.nodeName&&(z[t.key]=[!0,t.code],e&&console.log(z))})),document.addEventListener("keyup",(function(M){e&&console.log(M);e&&console.log(z);if(!Object.keys(z).length>0||"Alt"===Object.keys(z)[0])return;if("INPUT"===M.target.nodeName)return;M.preventDefault(),L(),w(y);let l="";for(let t=0;t<i.length;t++){const M=i[t];if(e&&console.log(M),M in z){switch(M){case"Control":l+="ctrl+";break;case"Shift":l+="shift+";break;case"Alt":l+="alt+";break;case"Meta":l+=c}delete z[M]}}e&&console.log(`keys pressed: ${l}`);e&&console.log("remaining keys down: ");e&&console.log(z);for(let i in z)e&&console.log(i),"macOS"===t&&l.includes("alt")?l+=z[i][1].substring(3).toLowerCase():l+=i.toLowerCase();e&&console.log(`keys pressed: ${l}`);if("alt+"===l)return;for(let t in a){e&&console.log(t);const i=a[t].keyboardShortcut;if(e&&console.log(i),i===l){C("doSearch",{id:t}),z={};break}}})),browser.storage.onChanged.addListener((async function(t,i){let M;e&&(console.log("The following changes have occured:\n"),console.log(t));switch(i){case"local":a={},a=await browser.storage.local.get(null),null==document.querySelector('link[type="application/opensearchdescription+xml"]')?C("hidePageAction",null):C("showPageAction",null);for(let t in a)if(a[t].url.includes(s)){e&&console.log("This web page has already been added to your list of search engines."),C("hidePageAction",null);break}break;case"sync":M=await browser.storage.sync.get(null),u=!1,d=M.options,d&&"sameTab"===d.tabMode&&(u=!0)}})),browser.runtime.onMessage.addListener((async t=>{let i;if("getSearchEngine"===t.action)try{i=document.querySelector('link[type="application/opensearchdescription+xml"]').href,e&&console.log(i);const t=await p(i);null!==t&&C("addNewSearchEngine",t)}catch(t){e&&console.log(t),C("notify",M)}})),async function(){N=window.location.href,j=window.location.pathname,s=window.location.hostname,e&&(console.log(`Tab url: ${N}`),console.log(`Path name: ${j}`),console.log(`Domain: ${s}`)),null==document.querySelector('link[type="application/opensearchdescription+xml"]')?C("hidePageAction",null):C("showPageAction",null),d=await browser.storage.sync.get(null),e&&console.log(d),u="sameTab"===d.tabMode,a=await browser.storage.local.get(null),e&&console.log(a);for(let t in a)if(a[t].url.includes(s)){e&&console.log("This web page has already been added to your list of search engines."),C("hidePageAction",null);break}A()}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
